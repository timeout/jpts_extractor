#!/usr/bin/env ruby

require 'jpts_extractor'

require 'pathname'

# JPTSFormatter::Cli::Application.start(ARGV)

def read_file(io, lines)
  io.readlines.each { |line| lines << line.chomp }
end

=begin
  jpts_extractor <input> <output>
  jpts_extractor <output>             # input STDIN
  jpts_extractor <input> -            # output STDOUT
  jpts_extractor                      # pass through aka STDIN â†’ STDOUT
=end

if ARGV.empty?
  article = JPTSExtractor.extract(STDIN)
  STDOUT.puts JPTSExtractor.output article
  exit
end

case ARGV.size
when 1
  output_filename = ARGV[0]
  output_path = Pathname(output_filename)
  article = JPTSExtractor.extract(STDIN)
  output_path.open('w') { |f| f.write(JPTSExtractor.output(article)) }
when 2
  input_filename = ARGV[0]
  input_path = Pathname.new(input_filename)

  output_filename = ARGV[1]
  output_path = Pathname.new(output_filename)

  article = JPTSExtractor.extract(input_path.open)
  output = JPTSExtractor.output(article)
  output_path.open('w') { |f| f.write output }
else
  puts "usage information"
end
